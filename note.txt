
Utiliser Virtualenv

installer VirtualEnv hors dossier projet
    pip install virtualenv

Créer environnement virtuel dans projet
    virtualenv env
    or
    virtualenv -p $env:python3 env

activer l'environnement
    ./env/scripts/activate.ps1

réactiver à chaque fois avant utilisation.

désactiver un environnement virtuel
    deactivate

supprimer un environnement virtuel
    deactivate
    rm -rf env

Désactiver le suivi Git
    créez un fichier .gitignore
    ajoutez env/

Créer un fichier de dépendances
    pip list > requirements.txt

Installer des dépendances depuis un fichier de dependances
    pip install -r requirements.txt

activer un dossier comme repository Git
    git init
ajouter à l'index Git
    git add .

commit
    git push https://github.com/sabiarist/FlaskOC.git master

push
    git push -f origin master

Installer Flask
    pip install flask

vérifier que Flask fonctionne
    python views.py

Utiliser un ORM
    installer alchemy
        pip install flask_sqlalchemy
        or
        pip install SQLAlchemy==1.2.19

console interactive de Flask
    set FLASK_APP=run.py
    flask shell

ajouter un item à la base
    db.session.add()

faire les requêtes dans la base pour finaliser l'opération
    db.session.commit()

renvoie tous les items de la table Content
    Content.query.all()

modifier un item via son id
    content = Content.query.get(1)
    content.description
    content.description = "Il s'appelle Juste Leblanc."
    db.session.commit()

supprimer un élément
    content = Content.query.get(1)
    db.session.delete(content)
    db.session.commit()

Peupler la table de données pré-existantes
    FLASK_APP=run.py flask init_db

filtrer par colonne
    TableName.query.filter_by(column_name=filter).first()

génère une URL
    url_for('static', filename='css/bootstrap/bootstrap.min.css')

utiliser la variable config
    {{ config['FB_APP_ID'] }}

étendre base.html dans le template result.html
    {% extends 'base.html' %}

utilisez la librairie Pillow pour générer l'image
    pip install Pillow

exécutez le script Pillow
    python fbapp/utils.py

textsize renvoie la largeur et la hauteur en pixeld'une chaine de caractères donnée.
    w, h = draw.textsize(text, font)

Calcul de la position pour que le texte soit centré et non pas aligné à gauche.
    position = ((img.width - w) / 2, height)

Ajout du texte à l'image.
    draw.text(position, text, (255, 255, 255), font=font)